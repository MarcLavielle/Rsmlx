% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/vpc.R
\name{vpc}
\alias{vpc}
\title{Visual Predictive Check}
\usage{
vpc(
  project,
  time = "time",
  obsName = NULL,
  plot = TRUE,
  stratSplit = c(),
  stratFilter = list(),
  stratScale = list(),
  level = 90,
  higherPercentile = 90,
  useCorrpred = FALSE,
  useCensored = TRUE,
  censoring = "simulated",
  eventDisplay = c("survivalCurve", "empiricalCurve", "predictionInterval"),
  discreteDisplay = c("empiricalProbability", "predictionInterval"),
  continuousDisplay = c("empiricalPercentiles", "predictionInterval", "outliersDots",
    "outlierAreas"),
  xBins.useFixedBins = FALSE,
  xBins.fixedBins = c(),
  xBins.criteria = "leastsquare",
  xBins.useFixedNbBins = FALSE,
  xBins.nbBins = 10,
  xBins.binRange = c(5, 20),
  xBins.nbBinData = c(10, 200),
  xBins.nbDataPoints = 100,
  yBins.useFixedBins = FALSE,
  yBins.fixedBins = c(),
  yBins.criteria = "leastsquare",
  yBins.useFixedNbBins = FALSE,
  yBins.nbBins = 5,
  yBins.binRange = c(3, 7),
  yBins.nbBinData = c(10, 200),
  legend = FALSE,
  grid = FALSE,
  xlogScale = FALSE,
  ylogScale = FALSE,
  linearInterpolation = TRUE,
  xlab = "time",
  ylab = "y",
  binLimits = FALSE,
  vpcTheme = NULL
)
}
\arguments{
\item{project}{(\emph{string}) Monolix project}

\item{time}{(\emph{string}) (\emph{optional}) in {`time`, `timeSinceLastDose`} (default `time`).
`timeSinceLastDose` only possible when there is an `amount` column in the dataset}

\item{obsName}{(\emph{string}) (\emph{optional}) observation name.
By default when several observations in the dataset, the first observation is considered.}

\item{plot}{(\emph{bool}) (\emph{optional}) if TRUE return plot (ggplot object), else return vpc stat dataframe (default TRUE)

\strong{parameters startification}}

\item{stratSplit}{(\emph{vector(string)}) (\emph{optional}) vector of covariate names used to split vpc plot.
(no split by default).}

\item{stratFilter}{(\emph{list}) (\emph{optional}) list of covariate names used to filter vpc plot
names are covariate names and values are category name in case of categorical covariate
and group id in case of continuous covariate.
(no filter by default).}

\item{stratScale}{(\emph{list}) (\emph{optional}) list of continuous covariate scaling
Names are continuous covariate names and values are vector of break doubles.
If not scaling defined, by default break is defined at the median.

\strong{parameters for vpc computation}}

\item{level}{(\emph{int}) (\emph{optional}) level for prediction intervals computation (default 90).}

\item{higherPercentile}{(\emph{int}) (\emph{optional}) (\emph{continuous data}) Higher percentile for empirical and predicted percentiles computation.
(default 90) For continuous data only.}

\item{useCorrpred}{(\emph{bool}) (\emph{optional}) (\emph{continuous data}) if TRUE, pcVPC are computed using Uppsala prediction correction (default FALSE). For continuous data only.}

\item{useCensored}{(\emph{bool}) (\emph{optional}) (\emph{continuous data}) Choose to use BLQ data or to ignore it to compute the VPC (default TRUE). For continuous data only.}

\item{censoring}{(\emph{string}) (\emph{optional}) (\emph{continuous data}) in {`simulated`, `loq`}, BLQ data can be simulated, or can be equal to the limit of quantification (LOQ) (default `simulated`). For continuous data only.

\strong{display parameters for plot}}

\item{eventDisplay}{(\emph{vector(string)}) (\emph{optional}) (\emph{event data}) List of event data curves to display in VPC plots.
(by default eventDisplay = c("survivalCurve", "empiricalCurve", "predictionInterval"))
You must choose among the following curves:
\itemize{
\item \code{survivalCurve} Add plot for survival function (Kapan-Meier plot) (default TRUE).
\item \code{meanNumberEventsCurve} Add plot for mean number of events per individual (default FALSE).
\item \code{empiricalCurve} Add empirical curve (default TRUE).
\item \code{predictedMedian} Add predicted median (default FALSE).
\item \code{predictionInterval} Add prediction intervals given by the model (default TRUE).
}}

\item{discreteDisplay}{(\emph{vector(string)}) (\emph{optional}) (\emph{discrete data}) List of discrete data curves to display in VPC plots.
(by default discreteDisplay = c("empiricalProbability", "predictionInterval"))
You must choose among the following curves:
\itemize{
\item \code{empiricalProbability} Add empirical probability.
\item \code{predictedMedian} Add theorical probability.
\item \code{predictionInterval} Add prediction intervals given by the model.
\item \code{outlierAreas} Add red areas indicating empirical percentiles that are outside prediction intervals.
}}

\item{continuousDisplay}{(\emph{vector(string)}) (\emph{optional}) (\emph{continuous data}) List of continuous data curves to display in VPC plots.
(by default continuousDisplay = c("empiricalPercentiles", "predictionInterval", "outliersDots", "outlierAreas"))
You must choose among the following curves:
\itemize{
\item \code{observedData} Add observed data (default FALSE).
\item \code{censoredData} Add BLQ data if present (default FALSE).
\item \code{empiricalPercentiles} Add empirical percentiles for the 10%, 50% and 90% quantiles.
\item \code{predictedPercentiles} Add theoretical percentiles for the 10% and 90% quantiles.
\item \code{predictionInterval} Add prediction intervals given by the model for the 10% and 90% quantiles (in blue) and the 50% quantile (in pink).
\item \code{outliersDots} Add red dots indicating empirical percentiles that are outside prediction intervals.
\item \code{outlierAreas} Add red areas indicating empirical percentiles that are outside prediction intervals.
}

\strong{parameters for x-axis bins - only for continuous and discrete data}}

\item{xBins.useFixedBins}{(\emph{bool}) (\emph{optional}) If TRUE, specify manually bin list (default FALSE).}

\item{xBins.fixedBins}{(\emph{vector(double)}) (\emph{optional}) Define mannually a list of bins. To use when `useFixedBins` is set to TRUE.}

\item{xBins.criteria}{(\emph{vector(string)}) (\emph{optional}) Choose the bining criteria among `equalwidth`, `equalsize` or `leastsquare` (default leastsquare).}

\item{xBins.useFixedNbBins}{(\emph{vector(bool)}) (\emph{optional}) If TRUE define a fixed number of bins, else define a range for automatic selection (default FALSE).}

\item{xBins.nbBins}{(\emph{int}) (\emph{optional}) Define a fixed number of bins (default 10).}

\item{xBins.binRange}{(\emph{vector(int, int)}) (\emph{optional}) Define a range for the number of bins (default c(5, 20)).}

\item{xBins.nbBinData}{(\emph{vector(int, int)}) (\emph{optional}) Define a range for the number of data points per bin (default c(10, 200)).}

\item{xBins.nbDataPoints}{(\emph{int}) (\emph{optional}) (\emph{event data}) Number of data point in event time grid (default 100)

\strong{parameters for y-axis bins - only for discrete countable data}}

\item{yBins.useFixedBins}{(\emph{bool}) (\emph{optional}) If TRUE, specify manually bin list (default FALSE).}

\item{yBins.fixedBins}{(\emph{vector(double)}) (\emph{optional}) Define mannually a list of bins. To use when `useFixedBins` is set to TRUE.}

\item{yBins.criteria}{(\emph{string}) (\emph{optional}) Choose the bining criteria among `equalwidth`, `equalsize` or `leastsquare` (default leastsquare).}

\item{yBins.useFixedNbBins}{(\emph{vector(bool)}) (\emph{optional}) If TRUE define a fixed number of bins, else define a range for automatic selection (default FALSE).}

\item{yBins.nbBins}{(\emph{int}) (\emph{optional}) Define a fixed number of bins (default 5).}

\item{yBins.binRange}{(\emph{vector(int, int)}) (\emph{optional}) Define a range for the number of bins (default c(3, 7)).}

\item{yBins.nbBinData}{(\emph{vector(int, int)}) (\emph{optional}) Define a range for the number of data points per bin (default c(10, 200)).

\strong{General settings for plot}}

\item{legend}{(\emph{bool}) (\emph{optional}) Add/remove legend (default FALSE).}

\item{grid}{(\emph{bool}) (\emph{optional}) Add/remove grid (default FALSE).}

\item{xlogScale}{(\emph{bool}) (\emph{optional}) Add/remove log scale for x axis (default FALSE).}

\item{ylogScale}{(\emph{bool}) (\emph{optional}) Add/remove log scale for x axis (default FALSE).}

\item{linearInterpolation}{(\emph{bool}) (\emph{optional}) If TRUE set piece wise display for prediction intervals, else show bins as rectangular (default TRUE).}

\item{xlab}{(\emph{string}) (\emph{optional}) Time label (default "time" if time = "time", "time since last dose" if time = "timeSinceLastDose").}

\item{ylab}{(\emph{string}) (\emph{optional}) y label (default observation name).}

\item{binLimits}{(\emph{bool}) (\emph{optional}) Add/remove vertical lines on the scatter plots to indicate the bins (default FALSE).}

\item{vpcTheme}{(\emph{vpc_theme}) (\emph{optional}) theme to be used in VPC. Expects list of class vpc_theme created with function createVpcTheme()}
}
\value{
If plot set to TRUE, return a ggplot2 object, else return a list with the following info
\itemize{
  \item \code{vpcPercentiles}: a dataframe with vpc percentiles (bins, empirical and theorical vpc) 
  \item \code{observations}: a dataframe with observations
  \item \code{obsName}: Name of observation
  \item \code{timeName}: Name of time
}
}
\description{
Creates a VPC plot from monolix project
}
\examples{
\dontrun{
  p <- vpc(
    project = "RsmlxDemo1.mlxtran",
    stratSplit = c("sex", "wt"),
    stratFilter = list("age" = 1),
    stratScale = list("age" = c(65), "wt" = c(70))
  )
  p <- vpc(project = "RsmlxDemo1.mlxtran",
      xBins.useFixedBins = TRUE,
      xBins.fixedBins = c(0, 24, 48, 72, 96, 120)
  )
  p <- vpc(project = "RsmlxDemo1.mlxtran", time = "timeSinceLastDose")
  vpcPerc <- vpc(project = "RsmlxDemo1.mlxtran", plot = FALSE)
  p <- vpc(project = "RsmlxDemo1.mlxtran", plot = TRUE,
      continuousDisplay = c("censoredData", "empiricalPercentiles", "predictionInterval", "outlierAreas")
  )
}
}
\seealso{
\link{vpcStats} \link{createVpcTheme} \link{plotVPC}
}
