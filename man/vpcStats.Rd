% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/vpcStats.R
\name{vpcStats}
\alias{vpcStats}
\title{Generate statistics for Visual Predictive Check
Creates data to further plot VPC from monolix project}
\usage{
vpcStats(
  project,
  time = "time",
  obsName = NULL,
  stratSplit = NULL,
  stratFilter = NULL,
  stratScale = NULL,
  level = 90,
  higherPercentile = 90,
  useCorrpred = FALSE,
  useCensored = TRUE,
  censoring = "simulated",
  event.averageNumberEvents = FALSE,
  xBinsSettings = NULL,
  yBinsSettings = NULL
)
}
\arguments{
\item{project}{(\emph{string}) Monolix project}

\item{time}{(\emph{string}) (\emph{optional}) in {`time`, `timeSinceLastDose`} (default `time`).
`timeSinceLastDose` only possible when there is an `amount` column in the dataset}

\item{obsName}{(\emph{string}) (\emph{optional}) observation name. By default the first observation is considered.

\strong{parameters startification}}

\item{stratSplit}{(\emph{vector(string)}) (\emph{optional}) vector of covariate names used to split vpc plot.
(no split by default).}

\item{stratFilter}{(\emph{list}) (\emph{optional}) list of covariate names used to filter vpc plot
names are covariate names and values are category name in case of categorical covariate
and group id in case of continuous covariate.
(no filter by default).}

\item{stratScale}{(\emph{list}) (\emph{optional}) list of continuous covariate scaling
Names are continuous covariate names and values are vector of break doubles.
If not scaling defined, by default break is defined at the median.

\strong{parameters for vpc computation}}

\item{level}{(\emph{int}) (\emph{optional}) level for prediction intervals computation (default 90).}

\item{higherPercentile}{(\emph{int}) (\emph{optional}) (\emph{continuous data}) (integer)
Higher percentile for empirical and predicted percentiles computation (default 90). For continuous data only.}

\item{useCorrpred}{(\emph{bool}) (\emph{optional}) (\emph{continuous data}) if TRUE, pcVPC are computed using Uppsala prediction correction (default FALSE).
For continuous data only.}

\item{useCensored}{(\emph{bool}) (\emph{optional}) (\emph{continuous data}) Choose to use BLQ data or to ignore it to compute the VPC (default TRUE).
For continuous data only.}

\item{censoring}{(\emph{string}) (\emph{optional}) (\emph{continuous data}) in {`simulated`, `loq`}, BLQ data can be simulated, or can be equal to the limit of quantification (LOQ) (default `simulated`). For continuous data only.}

\item{event.averageNumberEvents}{(\emph{bool}) (\emph{optional}) (\emph{event data}) If TRUE compute average number events in addition to survival curve (default FALSE)
If you do not need it, leave it to FALSE, it will speed up computations

\strong{parameters for x-axis  bins}}

\item{xBinsSettings}{(\emph{binSettingsClass}) (\emph{optional}) (\emph{continuous and discrete data}) a binSettingsClass object \link{getBinsSettings}.
a list of settings for time axis binning.}

\item{yBinsSettings}{(\emph{binSettingsClass}) (\emph{optional}) (\emph{countable discrete data}) a binsSettingsClass object \link{getBinsSettings}.
a list of settings for y axis binning.}
}
\value{
A list:
\itemize{
  \item \code{vpcPercentiles}: a dataframe with vpc percentiles (bins, empirical and theorical vpc) 
  \item \code{observations}: a dataframe with observations
  \item \code{obsName}: Name of observation
  \item \code{timeName}: Name of time
}
}
\description{
Generate statistics for Visual Predictive Check
Creates data to further plot VPC from monolix project
}
\examples{
\dontrun{
  stratSplit <- c("sex", "wt")
  stratFilter = list("age" = 1)
  stratScale = list(age = c(65), wt = c(70))
  xBinsSettings <- getBinsSettings(is.fixedBins = TRUE, fixedBins = c(0, 24, 48, 72, 96, 120))
  vpcStats(project="RsmlxDemo1.mlxtran", stratSplit=stratSplit,
           stratFilter=stratFilter, stratScale=stratScale)
  vpcStats(project="RsmlxDemo1.mlxtran", xBinsSettings=xBinsSettings)
  vpcStats(project="RsmlxDemo1.mlxtran", time = "timeSinceLastDose")
}

}
\seealso{
\link{vpc} \link{plotVpc}
}
