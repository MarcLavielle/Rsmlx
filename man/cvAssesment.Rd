% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cvAssesment.R
\name{cvAssesment}
\alias{cvAssesment}
\title{Convergence assesment function}
\usage{
cvAssesment(project, type = NULL, nbReplicates = NULL,
  initialParameters = NULL, initialParametersMinMax = NULL)
}
\arguments{
\item{project}{project name}

\item{type}{type of assessment. [Optional] It defines the scanario of the assesment. It can be 'FAST', 'LINEARIZED', or 'EXTENDED'. The default value is 'EXTENDED'}

\item{nbReplicates}{number of replicates. [Optional] The deualt value is 5}

\item{initialParameters}{data.frame defining the initial parameters for the assessment. [Optional] for the user that want to define it by himself.}

\item{initialParametersMinMax}{named list of initial parameters min and max for the assessment. [Optional]  for the user that want to define it by himself.}
}
\description{
Allow to test differente initial conditions and different seeds.
}
\examples{
\dontrun{
cvAssesment(project) => run the assessment for the project with default values
cvAssesment(project, nbReplicates  = 10) => run the assessment for the project with 10 replicates
cvAssesment(project, type = 'FAST') => run the assessment with only SAEM, no standard error nor Log-likelihood will be computed
out <- cvAssesment(project, initialParameters = data.frame(ka_pop = seq(from=1, to = 5, by=1), V_pop_ = seq(from=1, to = 5, by=1)))
=> run the assessment with only ka_pop and V_pop (if population parameters) as varying initial conditions. The initial conditions are defined in the data frame
out <- cvAssesment(project, initialParametersMinMax = list(ka_pop = c(min=1, max = 3), Cl_pop = c(min=.1, max = .5)) )
=> run the assessment with only ka_pop and Cl_pop (if population parameters) as varying initial conditions. The initial conditions are uniformly drawn from the associated min and max
}
}
